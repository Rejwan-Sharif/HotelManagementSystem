/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package hotelmanagementsystem;


import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.ResultSet;


/**
 *
 * @author user
 */
public class SearchRoom extends javax.swing.JPanel {

    /**
     * Creates new form SearchRoom
     */
    
    DefaultTableModel dtm;
    
    public SearchRoom() {
        initComponents();
        
        
         dtm = new DefaultTableModel(new String [] {"Room Number","Status","Cleaning Status","Price","Bed Type"},0);
        jTable1.setModel(dtm);
        jTable1.setShowGrid(true);
        bdType.addItem("Single");
        bdType.addItem("Double");
      
        showRoom();
        
        
    }
    
    public void showRoom(){
        try{
            
            PreparedStatement pst  = DBConnection.db.get().prepareStatement("select * from add_room ");  
            ResultSet  rs =  pst.executeQuery();
            dtm.setRowCount(0);
            while(rs.next()){
                Object [] data =  {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)};
                dtm.addRow(data);      
            }
            
        }catch(Exception a){
            System.out.println("a");
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        bdType = new javax.swing.JComboBox<>();

        jCheckBox1.setFont(new java.awt.Font("Segoe UI Black", 3, 14)); // NOI18N
        jCheckBox1.setText("Only Display Available");
        jCheckBox1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCheckBox1MouseClicked(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable1.setShowGrid(false);
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 3, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Search  Room");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Bed Type :");

        bdType.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                bdTypeItemStateChanged(evt);
            }
        });
        bdType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bdTypeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1265, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bdType, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(126, 126, 126))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1118, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(147, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bdType, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 571, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(145, 145, 145)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 552, Short.MAX_VALUE)
                    .addContainerGap()))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBox1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCheckBox1MouseClicked
        // TODO add your handling code here:

        try{

            PreparedStatement pst  = DBConnection.db.get().prepareStatement("select * from add_room where status = 'Available' and bed_type = '"+bdType.getSelectedItem()+"'");

            ResultSet  rs =  pst.executeQuery();
            dtm.setRowCount(0);
            while(rs.next()){
                Object [] data =  {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)};
                dtm.addRow(data);
            }

        }catch(Exception a){
            System.out.println(a);
        }
    }//GEN-LAST:event_jCheckBox1MouseClicked

    private void bdTypeItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_bdTypeItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_bdTypeItemStateChanged

    private void bdTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bdTypeActionPerformed
        // TODO add your handling code here:
        try{
            String s = "";
            if(jCheckBox1.isSelected()){
                s="select * from add_room where bed_type = ? and status = 'Available'";
            }
            else{
                s="select * from add_room where bed_type = ?";
            }
            PreparedStatement pst  = DBConnection.db.get().prepareStatement(s);
            pst.setString(1, bdType.getSelectedItem().toString());
            ResultSet  rs =  pst.executeQuery();
            dtm.setRowCount(0);
            while(rs.next()){
                Object [] data =  {rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5)};
                dtm.addRow(data);
            }

        }catch(Exception a){
            System.out.println(a);
        }
    }//GEN-LAST:event_bdTypeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> bdType;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
